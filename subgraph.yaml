specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: shell
    network: mainnet
    source:
      address: "0x8f26D7bAB7a73309141A291525C965EcdEa7Bf42"
      abi: shell
      startBlock: 11533846
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pool
        - ParametersSet
        - User
        - Token
        - ShellPosition
        - Transaction
        - Withdrawal
        - Deposit
        - Swap
        - WeightTracker
        - Shell
      abis:
        - name: shell
          file: ./abis/shell.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: aERC20
          file: ./abis/aERC20.json
        - name: cERC20
          file: ./abis/cERC20.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: AssetIncluded(indexed address,indexed address,uint256)
          handler: handleAssetIncluded
        - event: AssimilatorIncluded(indexed address,indexed address,indexed address,address)
          handler: handleAssimilatorIncluded
        - event: FrozenSet(bool)
          handler: handleFrozenSet
        - event: OwnershipTransfered(indexed address,indexed address)
          handler: handleOwnershipTransfered
        - event: ParametersSet(uint256,uint256,uint256,uint256,uint256)
          handler: handleParametersSet
        - event: PartitionRedeemed(indexed address,indexed address,uint256)
          handler: handlePartitionRedeemed
        - event: PoolPartitioned(bool)
          handler: handlePoolPartitioned
        - event: Trade(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTrade
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      callHandlers:
        - function: originSwap(address,address,uint256,uint256,uint256)
          handler: handleOriginSwapCall
        - function: partitionedWithdraw(address[],uint256[])
          handler: handlePartitionedWithdrawCall
        - function: proportionalDeposit(uint256,uint256)
          handler: handleProportionalDepositCall
        - function: proportionalWithdraw(uint256,uint256)
          handler: handleProportionalWithdrawCall
        - function: selectiveDeposit(address[],uint256[],uint256,uint256)
          handler: handleSelectiveDepositCall
        - function: selectiveWithdraw(address[],uint256[],uint256,uint256)
          handler: handleSelectiveWithdrawCall
        - function: targetSwap(address,address,uint256,uint256,uint256)
          handler: handleTargetSwapCall
      file: ./src/mapping.ts
